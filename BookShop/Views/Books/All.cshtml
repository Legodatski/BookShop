@model AllBookQueryModel

<hr />

<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Subject"></label>
                <select asp-for="Subject" class="form-control">
                    <option value="">All</option>
                    @foreach (var subject in Model.AllSubjects)
                    {
                        <option value="@subject.Name">@subject.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label> <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Lowest grade first</option>
                    <option value="2">Alphabetically</option>
                    <option value="3">Lowest price first</option>
                    <option value="4">Alphabetically by publisher name</option>
                    <option value="5">Alphabetically by city name</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-4 p-2"> <input type="submit" value="Search" class="btn btn-primary" /> </div>
        </div>
    </div>

</form>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalBooksCount / AllBookQueryModel.BooksPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" asp-controller="Houses"
           asp-action="All" asp-route-currentPage="@previousPage" asp-route-category="@Model.Subject"
           asp-route-searchTerm="@Model.SearchTerm" asp-route-sorting="@((int)Model.Sorting)">
            <<
        </a>
    </div>
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Books.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Houses" asp-action="All" asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Subject" asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">
            >>
        </a>
    </div>
</div>


@if (Model.Books.Count() == 0)
{
    <div>There are no studentbooks available for you to buy at the moment.</div>
}
else
{
    <div class="row">
        @foreach (var book in Model.Books){
            <partial name="_BookPartial" model="@book"/>
        }
    </div>
}